// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "forge-std/Test.sol";

import {ExploitableContract} from "src/ExploitableContract.sol";
import {Exploiter} from "src/Exploiter.sol";

contract ExploitableContractTest is Test {
    ExploitableContract target;
    Exploiter exploiter;

    function setUp() external {
        target = new ExploitableContract();
        exploiter = new Exploiter(address(target));
    }

    function testExploit() external {
        address account = address(1);
        vm.deal(account, 1 ether);
        vm.prank(account);
        target.deposit{value: 1 ether}();

        address attacker = address(2);
        vm.deal(attacker, 1 ether);
        vm.prank(attacker);
        target.deposit{value: 1 ether}();
        vm.deal(address(exploiter), 1 ether);
        exploiter.attack{value: 1 ether}();
    }
}
